{"version":3,"sources":["components/home/home.tsx","constants.ts","utils/utils.tsx","components/liveboard/liveboard.tsx","components/viz/viz.tsx","components/viz/table-viz.tsx","components/search/search.tsx","components/full/full.tsx","api-client.tsx","components/api/api.tsx","routes.tsx","components/nav/nav.tsx","App.tsx","index.tsx"],"names":["Home","height","src","TOKEN_SERVER","TS_HOST","filterName","filterValues","visibleVizIds","actionsToDisable","Action","Edit","Share","disabledReason","actionsToHide","Schedule","customActionNameForShowThisViz","actionSet","Subscription","Save","EditTitle","Explore","Pin","SpotIQAnalyze","DrillDown","useEventLogger","t0","React","useRef","Date","now","logEvent","nameOrE","e","type","EmbedEvent","Init","current","data","timestamp","evtDetails","__type","id","notification","info","message","placement","duration","console","log","payload","JSON","parse","getPrettyEventPayload","convertToRowOriented","columnNames","rows","map","row","reduce","tRow","value","idx","columns","col","name","header","_","capitalize","Header","Layout","Footer","Sider","Content","Option","Select","Liveboard","embedRef","useEmbedRef","useState","hiddenActions","setHiddenActions","fullHeight","setFullHeight","disabledActions","setDisabledActions","lbV2","setLbV2","applyFilter","colName","trigger","HostEvent","UpdateRuntimeFilters","columnName","toLowerCase","operator","values","width","collapsedWidth","collapsible","className","Text","style","placeholder","onChange","item","onClick","Reload","SetVisibleVizs","vizId","Navigate","path","noReload","EditTML","ExportTML","LiveboardInfo","MakeACopy","CreateMonitor","ManageMonitor","Present","SchedulesList","UpdateTML","CopyLink","DownloadAsPdf","points","selectedPoints","VizPointDoubleClick","autoDrillDown","Remove","checkedChildren","unCheckedChildren","checked","defaultChecked","overflow","frameParams","ref","disabledActionReason","liveboardId","liveboardV2","onInit","onLoad","onLiveboardRendered","onDrilldown","onCustomAction","onVizPointDoubleClick","event","point","selectedAttributes","column","Viz","TableViz","Search","searchQuery","dataSources","searchOptions","searchTokenString","executeSearch","collapseDataSources","onQueryChanged","onData","FullApp","Page","page","setPage","defaultValue","Liveboards","Data","Answers","pageId","onAlert","onDialogOpen","onDialogClose","onRouteChange","RouteChange","showPrimaryNavbar","DEFAULT_CONFIGURATION","baseUrl","acceptLanguage","apiContext","createContext","metadataController","dataController","APIProvider","children","controllers","useEffect","Provider","Api","useContext","options","setOptions","setRows","setColumns","loading","setLoading","populateAnswers","searchObjectHeader","answers","result","headers","a","loadAnswer","answerData","option","dataSource","enableColumnAutosize","rowHeight","minHeight","routes","element","Nav","location","useLocation","position","selectedKeys","pathname","mode","Item","to","marginLeft","logout","authStatus","init","thoughtSpotHost","authType","AuthType","Passthrough","AppView","useRoutes","App","on","reason","error","rootElement","document","getElementById","render"],"mappings":"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","file":"static/js/main.c4ab6bab.chunk.js","sourcesContent":["export const Home = () => {\n  return (\n    <div>\n      <img\n        height={200}\n        src=\"https://raw.githubusercontent.com/thoughtspot/visual-embed-sdk/main/static/doc-images/images/TS-Logo-black-no-bg.svg\"\n      />\n      <p>ThoughtSpot Everywhere Biiig Demo</p>\n      <p>Click on one of the tabs above to continue</p>\n    </div>\n  );\n};\n","import { Action } from \"@thoughtspot/visual-embed-sdk\";\n\nexport const USERNAME = `demo-user`;\n// See https://github.com/thoughtspot/node-token-auth-server-example\n// for the implementation of the below endpoint.\nexport const TOKEN_SERVER =\n  \"https://node-token-auth-server-example-eta.vercel.app\";\nexport const TOKEN_ENDPOINT = `${TOKEN_SERVER}/api/gettoken/${USERNAME}`;\n// If you change this to `demo-user` the request starts failing with 403\nexport const TOKEN_ENDPOINT_API = `${TOKEN_SERVER}/api/v2/gettoken/ashish.shubham@thoughtspot.com`;\n\n// Cluster details\nexport const TS_HOST = `nebula-tse-900-98.thoughtspotdev.cloud`;\n\n// Liveboard\nexport const LiveboardId = \"4ee17df7-ea21-4c44-9437-55a4f001d147\";\n\n// Options for Select filter- EQ\nexport const filterName = \"Lo Shipmode\";\nexport const filterValues = [\"air\", \"fob\", \"mail\", \"ship\", \"null\", \"invalid\"];\n\n// Vizzes to show for 'Selected Vizs' button\n\nexport const visibleVizIds = [\"9a2388fe-49ea-4921-ac19-171668984590\"];\n\n// Options for Actions Disabled\nexport const actionsToDisable = [Action.Edit, Action.Share];\nexport const disabledReason = \"Action disabled\";\n\n// Options for Actions hidden\nexport const actionsToHide = [Action.Schedule];\n\n// Create a custom action and update the name here.- ignore\n// Selecting the action should only show the current viz.\nexport const customActionNameForShowThisViz = \"show-json\";\n","import _ from \"lodash\";\nimport React from \"react\";\nimport { notification } from \"antd\";\nimport { EmbedEvent, Action } from \"@thoughtspot/visual-embed-sdk\";\n\nexport const actionSet = [\n  Action.Subscription,\n  Action.Share,\n  Action.Save,\n  Action.Edit,\n  Action.EditTitle,\n  Action.Explore,\n  Action.Pin,\n  Action.SpotIQAnalyze,\n  Action.DrillDown\n];\n\nexport function useEventLogger() {\n  const t0 = React.useRef(Date.now());\n\n  return function logEvent(nameOrE: any) {\n    if (typeof nameOrE === \"string\") {\n      return (e) => {\n        e.type = nameOrE;\n        logEvent(e);\n      };\n    }\n    if (nameOrE.type === EmbedEvent.Init) {\n      t0.current = nameOrE?.data.timestamp;\n    }\n    const evtDetails = `${nameOrE.type || nameOrE.__type} ${nameOrE.id || \"\"}`;\n    notification.info({\n      message: `Event ${evtDetails}`,\n      placement: \"bottomRight\",\n      duration: 2\n    });\n    console.log(\n      `[Event] ${evtDetails}`,\n      `delta: ${(Date.now() - t0.current) / 1000}`,\n      getPrettyEventPayload(nameOrE.data)\n    );\n  };\n}\n\nfunction getPrettyEventPayload(payload) {\n  if (typeof payload === \"string\") {\n    return JSON.parse(payload);\n  }\n  return payload;\n}\n\nexport function convertToRowOriented(payload: any) {\n  const { columnNames, data } = payload;\n  const rows = data.map((row: any[]) => {\n    return row.reduce((tRow, value, idx) => {\n      tRow[columnNames[idx]] = value;\n      return tRow;\n    }, {});\n  });\n  const columns = columnNames.map((col) => {\n    return {\n      name: col,\n      header: _.capitalize(col)\n    };\n  });\n  return {\n    rows,\n    columns\n  };\n}\n","import { Action, EmbedEvent, HostEvent } from \"@thoughtspot/visual-embed-sdk\";\nimport {\n  LiveboardEmbed,\n  useEmbedRef\n} from \"@thoughtspot/visual-embed-sdk/lib/src/react\";\nimport { Layout, Button, Switch, Select, Typography } from \"antd\";\nimport React from \"react\";\nimport {\n  actionsToDisable,\n  actionsToHide,\n  customActionNameForShowThisViz,\n  disabledReason,\n  filterName,\n  filterValues,\n  LiveboardId,\n  visibleVizIds\n} from \"../../constants\";\nimport { useEventLogger } from \"../../utils/utils\";\nimport \"./liveboard.css\";\n\nconst { Header, Footer, Sider, Content } = Layout;\nconst { Option } = Select;\n\nexport const Liveboard = () => {\n  const logEvent = useEventLogger();\n  const embedRef = useEmbedRef();\n  const [hiddenActions, setHiddenActions] = React.useState<Action[]>([]);\n  const [fullHeight, setFullHeight] = React.useState(false);\n  const onToggleHideActions = (checked: boolean) => {\n    if (checked) {\n      setHiddenActions([]);\n    } else {\n      setHiddenActions(actionsToHide);\n    }\n  };\n\n  const [disabledActions, setDisabledActions] = React.useState<Action[]>([]);\n  const onToggleDisabledActions = (checked: boolean) => {\n    if (checked) {\n      setDisabledActions([]);\n    } else {\n      setDisabledActions(actionsToDisable);\n    }\n  };\n\n  const [lbV2, setLbV2] = React.useState<boolean>(true);\n  const onToggleLbV2 = (checked: boolean) => {\n    if (checked) {\n      setLbV2(true);\n    } else {\n      setLbV2(false);\n    }\n  };\n\n  const applyFilter = (colName: string, value: string) => {\n    console.log(colName, value);\n    embedRef.current.trigger(HostEvent.UpdateRuntimeFilters, [\n      {\n        columnName: colName.toLowerCase(),\n        operator: \"NE\",\n        values: [value]\n      }\n    ]);\n  };\n\n  const onDoubleClick = (event: any) => {\n    console.log(event);\n    const point = event.data.selectedPoints[0].selectedAttributes[0];\n    const colName = point.column.name;\n    const value = point.value;\n    applyFilter(colName, value);\n  };\n\n  const onFilterSelect = (value: string) => {\n    applyFilter(filterName, value);\n  };\n\n  const resetFilter = () => {\n    embedRef.current.trigger(HostEvent.UpdateRuntimeFilters, [\n      {\n        columnName: filterName,\n        operator: \"EQ\",\n        values: []\n      }\n    ]);\n  };\n\n  const onCustomAction = (e) => {\n    logEvent(e);\n    if (e.id === customActionNameForShowThisViz) {\n      embedRef.current.trigger(HostEvent.SetVisibleVizs, [\n        \"5c77eea9-e0f8-4b1a-9dc1-573f296129a8\"\n      ]);\n      console.log(JSON.parse(e.data));\n      console.log(\"selected current viz\");\n    }\n  };\n  const onToggleFullHeight = (checked: boolean) => {\n    setFullHeight(checked);\n  };\n\n  const exploreViz = () => {\n    embedRef.current.trigger(HostEvent.Explore, {\n      vizId: \"aa634926-d773-4b53-af84-418981befc74\"\n    });\n  };\n\n  const Schedule = () => {\n    embedRef.current.trigger(HostEvent.Schedule, {});\n    // points: clickedPointData,\n    // autoDrillDown: true,\n  };\n\n  const downloadViz = () => {\n    embedRef.current.trigger(HostEvent.DownloadAsPdf, {\n      vizId: \"aa634926-d773-4b53-af84-418981befc74\"\n    });\n  };\n\n  const downloadliveboard = () => {\n    embedRef.current.trigger(HostEvent.DownloadAsPdf, {});\n  };\n\n  // searchEmbed.trigger(HostEvent.DrillDown, {\n  //   points: clickedPointData,\n  //   autoDrillDown: true\n  // });\n\n  const drillDown = () => {\n    embedRef.current.trigger(HostEvent.DrillDown, {\n      points: { selectedPoints: [EmbedEvent.VizPointDoubleClick] },\n      autoDrillDown: true\n    });\n  };\n\n  //.on(EmbedEvent.VizPointDoubleClick, (data) => {\n  //   const { payload: clickedPointData } = data;\n  //   console.log(\">>> called\", clickedPointData);\n  //   embedRef.current.trigger(HostEvent.DrillDown, {\n  //     points: clickedPointData,\n  //     autoDrillDown: true\n  //   });\n  // });\n\n  //   .on(EmbedEvent.VizPointDoubleClick, (data) => {\n  //     const {\n  //         payload: clickedPointData\n  //     } = data;\n  //     console.log('>>> called', clickedPointData);\n  //     embed.trigger(HostEvent.DrillDown, {\n  //         points: clickedPointData,\n  //         autoDrillDown: true,\n  //     });\n  // })\n\n  const edit = () => {\n    embedRef.current.trigger(HostEvent.Edit, {\n      vizId: \"aa634926-d773-4b53-af84-418981befc74\"\n    });\n  };\n\n  const editTML = () => {\n    embedRef.current.trigger(HostEvent.EditTML, {});\n  };\n\n  const exportTML = () => {\n    embedRef.current.trigger(HostEvent.ExportTML, {});\n  };\n\n  const liveboardInfo = () => {\n    embedRef.current.trigger(HostEvent.LiveboardInfo, {});\n  };\n\n  const makeACopy = () => {\n    embedRef.current.trigger(HostEvent.MakeACopy, {});\n  };\n\n  const CreateMonitor = () => {\n    embedRef.current.trigger(HostEvent.CreateMonitor, {\n      vizId: \"132aee3b-152b-4852-9fb3-775c97949acc\"\n    });\n  };\n\n  const ManageMonitor = () => {\n    embedRef.current.trigger(HostEvent.ManageMonitor, {\n      vizId: \"132aee3b-152b-4852-9fb3-775c97949acc\"\n    });\n  };\n\n  const Pin = () => {\n    embedRef.current.trigger(HostEvent.Pin, {\n      vizId: \"aa634926-d773-4b53-af84-418981befc74\"\n    });\n  };\n\n  const Present = () => {\n    embedRef.current.trigger(HostEvent.Present, {\n      vizId: \"762cfe0f-6a5f-4381-b603-d3cd905de94a\"\n    });\n  };\n\n  const PresentLiveboard = () => {\n    embedRef.current.trigger(HostEvent.Present, {});\n  };\n\n  const ScheduleList = () => {\n    embedRef.current.trigger(HostEvent.SchedulesList, {});\n  };\n\n  const RuntimeFilter = () => {\n    embedRef.current.trigger(HostEvent.UpdateRuntimeFilters, [\n      {\n        columnName: \"Lo Shipmode\",\n        operator: \"IN\",\n        values: [\"ship\", \"air\"]\n      }\n    ]);\n  };\n\n  const updateTML = () => {\n    embedRef.current.trigger(HostEvent.UpdateTML, {});\n  };\n\n  const copyLink = () => {\n    embedRef.current.trigger(HostEvent.CopyLink, {});\n  };\n\n  const copyVizLink = () => {\n    embedRef.current.trigger(HostEvent.CopyLink, {\n      vizId: \"aa634926-d773-4b53-af84-418981befc74\"\n    });\n  };\n\n  const selectVizs = () => {\n    embedRef.current.trigger(HostEvent.SetVisibleVizs, visibleVizIds);\n  };\n  const reload = () => {\n    embedRef.current.trigger(HostEvent.Reload, {});\n  };\n\n  const navigate = () => {\n    embedRef.current.trigger(HostEvent.Navigate, {\n      path: \"saved-answer/9abc40b3-b29e-41d9-9bc7-8d9ea8e9afd3\",\n      noReload: true\n    });\n  };\n\n  const Remove = () => {\n    embedRef.current.trigger(HostEvent.Remove, {});\n  };\n\n  return (\n    <Layout>\n      <Header>\n        Liveboard Embed\n        <i> (see events details in the console)</i>\n      </Header>\n\n      <Layout>\n        <Sider width={200} collapsedWidth={0} collapsible>\n          <div className=\"sider-content\">\n            <Typography.Text>Filter</Typography.Text>\n            <Select\n              style={{ width: 140 }}\n              placeholder=\"Select filter\"\n              onChange={onFilterSelect}\n            >\n              {filterValues.map((item) => (\n                <Option value={item}>{item}</Option>\n              ))}\n            </Select>\n            <Button onClick={resetFilter}>Reset filter</Button>\n            <Button onClick={reload}>Reload</Button>\n            <Button onClick={selectVizs}>Selected Vizs</Button>\n            <Button onClick={exploreViz}>Explore</Button>\n            <Button onClick={Schedule}>Schedule</Button>\n            <Button onClick={navigate}>Navigate</Button>\n            <Button onClick={edit}>Edit</Button>\n            <Button onClick={editTML}>Edit TML</Button>\n            <Button onClick={exportTML}>Export TML</Button>\n            <Button onClick={liveboardInfo}>Show Liveboard Info</Button>\n            <Button onClick={makeACopy}>Copy Liveboard</Button>\n            <Button onClick={CreateMonitor}>CreateMonitor Alert</Button>\n            <Button onClick={ManageMonitor}>ManageMonitor</Button>\n            <Button onClick={Pin}>Pin a viz</Button>\n            <Button onClick={Present}>Present</Button>\n            <Button onClick={PresentLiveboard}>PresentLiveboard</Button>\n            <Button onClick={ScheduleList}>Show Schedules List</Button>\n            <Button onClick={RuntimeFilter}>RuntimeFilter</Button>\n            <Button onClick={updateTML}>updateTML</Button>\n            <Button onClick={copyLink}>Copy Liveboard Link</Button>\n            <Button onClick={copyVizLink}>Copy Viz Link</Button>\n            <Button onClick={downloadViz}>Download Viz</Button>\n            <Button onClick={downloadliveboard}>Download as PDF</Button>\n            <Button onClick={drillDown}>DrillDown</Button>\n            <Button onClick={Remove}>Remove</Button>\n            <Switch\n              checkedChildren=\"Height is Adaptive\"\n              unCheckedChildren=\"Height is static\"\n              onChange={onToggleFullHeight}\n            />\n            <Switch\n              checkedChildren=\"Actions shown\"\n              unCheckedChildren=\"Actions hidden\"\n              defaultChecked\n              onChange={onToggleHideActions}\n            />\n            <Switch\n              checkedChildren=\"Actions enabled\"\n              unCheckedChildren=\"Actions disabled\"\n              defaultChecked\n              onChange={onToggleDisabledActions}\n            />\n            <Switch\n              checkedChildren=\"LiveboardV2 enabled\"\n              unCheckedChildren=\"LiveboardV2 disabled\"\n              defaultChecked\n              onChange={onToggleLbV2}\n            />\n          </div>\n        </Sider>\n\n        <Content style={{ overflow: \"scroll\", height: \"1000px\" }}>\n          {/* ThoughtSpot liveboard Embed */}\n          <LiveboardEmbed\n            frameParams={{\n              height: 2000\n            }}\n            className=\"liveboard-content\"\n            ref={embedRef}\n            hiddenActions={hiddenActions}\n            disabledActions={disabledActions}\n            disabledActionReason={disabledReason}\n            fullHeight={fullHeight}\n            liveboardId={LiveboardId}\n            liveboardV2={lbV2}\n            onInit={logEvent(EmbedEvent.Init)}\n            onLoad={logEvent(\"Load\")}\n            onLiveboardRendered={logEvent}\n            onDrilldown={logEvent}\n            onCustomAction={onCustomAction}\n            onVizPointDoubleClick={onDoubleClick}\n          />\n        </Content>\n      </Layout>\n      <Footer>Footer</Footer>\n    </Layout>\n  );\n};\n","import { Action, EmbedEvent, HostEvent } from \"@thoughtspot/visual-embed-sdk\";\nimport {\n  LiveboardEmbed,\n  useEmbedRef\n} from \"@thoughtspot/visual-embed-sdk/lib/src/react\";\nimport { Layout, Button, Switch } from \"antd\";\nimport React from \"react\";\nimport { useEventLogger, actionSet } from \"../../utils/utils\";\n\nconst { Header, Footer, Sider, Content } = Layout;\n\nexport const Viz = () => {\n  const logEvent = useEventLogger();\n  const embedRef = useEmbedRef();\n  const [hiddenActions, setHiddenActions] = React.useState<Action[]>([]);\n  const onToggleHideActions = (checked: boolean) => {\n    if (checked) {\n      setHiddenActions([]);\n    } else {\n      setHiddenActions(actionSet);\n    }\n  };\n\n  const [disabledActions, setDisabledActions] = React.useState<Action[]>([]);\n  const onToggleDisabledActions = (checked: boolean) => {\n    if (checked) {\n      setDisabledActions([]);\n    } else {\n      setDisabledActions(actionSet);\n    }\n  };\n\n  const applyFilter = () => {\n    embedRef.current.trigger(HostEvent.UpdateRuntimeFilters, [\n      {\n        columnName: \"state\",\n        operator: \"EQ\",\n        values: [\"michigan\"]\n      }\n    ]);\n  };\n  const resetFilter = () => {\n    embedRef.current.trigger(HostEvent.UpdateRuntimeFilters, [\n      {\n        columnName: \"state\",\n        operator: \"EQ\",\n        values: []\n      }\n    ]);\n  };\n\n  const onCustomAction = (e) => {\n    if (e.id === \"only-this-viz\") {\n      embedRef.current.trigger(HostEvent.SetVisibleVizs, [\n        \"6d39225c-8845-44b4-b105-910981cdbba8\"\n      ]);\n      console.log(JSON.parse(e.data));\n    }\n  };\n  const triggerDrill = () => {};\n  const reload = () => {\n    embedRef.current.trigger(HostEvent.Reload, {});\n  };\n\n  return (\n    <Layout>\n      <Header>\n        Liveboard Embed\n        <i> (see events details in the console)</i>\n      </Header>\n\n      <Layout>\n        <Sider width={200}>\n          <div className=\"sider-content\">\n            <Button onClick={applyFilter}>Filter Michigan</Button>\n            <Button onClick={resetFilter}>Reset filter</Button>\n            <Button onClick={reload}>Reload</Button>\n            <Button onClick={triggerDrill}>Drill</Button>\n\n            <Switch\n              checkedChildren=\"Actions shown\"\n              unCheckedChildren=\"Actions hidden\"\n              defaultChecked\n              onChange={onToggleHideActions}\n            />\n            <Switch\n              checkedChildren=\"Actions enabled\"\n              unCheckedChildren=\"Actions disabled\"\n              defaultChecked\n              onChange={onToggleDisabledActions}\n            />\n          </div>\n        </Sider>\n\n        <Content>\n          <LiveboardEmbed\n            frameParams={{\n              height: 400\n            }}\n            className=\"liveboard-content\"\n            ref={embedRef}\n            hiddenActions={hiddenActions}\n            disabledActions={disabledActions}\n            disabledActionReason=\"Pay $$$\"\n            fullHeight={true}\n            liveboardId=\"c6746439-61cd-431c-a0d2-0328c9519057\"\n            vizId=\"53bc1596-dacd-489d-837f-98272a2c08a2\"\n            onInit={logEvent(EmbedEvent.Init)}\n            onLoad={logEvent(\"Load\")}\n            onLiveboardRendered={logEvent}\n            onDrilldown={logEvent}\n            onCustomAction={onCustomAction}\n          />\n        </Content>\n      </Layout>\n      <Footer>Footer</Footer>\n    </Layout>\n  );\n};\n","import { Action, EmbedEvent, HostEvent } from \"@thoughtspot/visual-embed-sdk\";\nimport {\n  LiveboardEmbed,\n  useEmbedRef\n} from \"@thoughtspot/visual-embed-sdk/lib/src/react\";\nimport { Layout, Button, Switch } from \"antd\";\nimport React from \"react\";\nimport { useEventLogger, actionSet } from \"../../utils/utils\";\n\nconst { Header, Footer, Sider, Content } = Layout;\n\nexport const TableViz = () => {\n  const logEvent = useEventLogger();\n  const embedRef = useEmbedRef();\n  const [hiddenActions, setHiddenActions] = React.useState<Action[]>([]);\n  const onToggleHideActions = (checked: boolean) => {\n    if (checked) {\n      setHiddenActions([]);\n    } else {\n      setHiddenActions(actionSet);\n    }\n  };\n\n  const [disabledActions, setDisabledActions] = React.useState<Action[]>([]);\n  const onToggleDisabledActions = (checked: boolean) => {\n    if (checked) {\n      setDisabledActions([]);\n    } else {\n      setDisabledActions(actionSet);\n    }\n  };\n\n  const applyFilter = () => {\n    embedRef.current.trigger(HostEvent.UpdateRuntimeFilters, [\n      {\n        columnName: \"state\",\n        operator: \"EQ\",\n        values: [\"michigan\"]\n      }\n    ]);\n  };\n  const resetFilter = () => {\n    embedRef.current.trigger(HostEvent.UpdateRuntimeFilters, [\n      {\n        columnName: \"state\",\n        operator: \"EQ\",\n        values: []\n      }\n    ]);\n  };\n\n  const onCustomAction = (e) => {\n    if (e.id === \"only-this-viz\") {\n      embedRef.current.trigger(HostEvent.SetVisibleVizs, [\n        \"6d39225c-8845-44b4-b105-910981cdbba8\"\n      ]);\n      console.log(JSON.parse(e.data));\n    }\n  };\n  const triggerDrill = () => {};\n  const reload = () => {\n    embedRef.current.trigger(HostEvent.Reload, {});\n  };\n\n  return (\n    <Layout>\n      <Header>\n        Table viz Embed\n        <i> (see events details in the console)</i>\n      </Header>\n\n      <Layout>\n        <Sider width={200}>\n          <div className=\"sider-content\">\n            <Button onClick={applyFilter}>Filter Michigan</Button>\n            <Button onClick={resetFilter}>Reset filter</Button>\n            <Button onClick={reload}>Reload</Button>\n            <Button onClick={triggerDrill}>Drill</Button>\n\n            <Switch\n              checkedChildren=\"Actions shown\"\n              unCheckedChildren=\"Actions hidden\"\n              defaultChecked\n              onChange={onToggleHideActions}\n            />\n            <Switch\n              checkedChildren=\"Actions enabled\"\n              unCheckedChildren=\"Actions disabled\"\n              defaultChecked\n              onChange={onToggleDisabledActions}\n            />\n          </div>\n        </Sider>\n\n        <Content>\n          <LiveboardEmbed\n            frameParams={{\n              height: 400\n            }}\n            className=\"liveboard-content\"\n            ref={embedRef}\n            hiddenActions={hiddenActions}\n            disabledActions={disabledActions}\n            disabledActionReason=\"Pay $$$\"\n            fullHeight={true}\n            liveboardId=\"3f9c48f5-c465-4785-abd5-38459e1f5d6d\"\n            vizId=\"94f36111-12a0-4153-be69-95f8e1a2ddfd\"\n            onInit={logEvent(EmbedEvent.Init)}\n            onLoad={logEvent(\"Load\")}\n            onLiveboardRendered={logEvent}\n            onDrilldown={logEvent}\n            onCustomAction={onCustomAction}\n            liveboardV2={false}\n          />\n        </Content>\n      </Layout>\n      <Footer>Footer</Footer>\n    </Layout>\n  );\n};\n","import { Action, EmbedEvent, HostEvent } from \"@thoughtspot/visual-embed-sdk\";\nimport {\n  SearchEmbed,\n  useEmbedRef\n} from \"@thoughtspot/visual-embed-sdk/lib/src/react\";\nimport { Layout, Button, Switch } from \"antd\";\nimport React from \"react\";\nimport { useEventLogger, actionSet } from \"../../utils/utils\";\n\nconst { Header, Footer, Sider, Content } = Layout;\n\nexport const Search = () => {\n  const logEvent = useEventLogger();\n  const embedRef = useEmbedRef();\n  const [hiddenActions, setHiddenActions] = React.useState<Action[]>([]);\n  const onToggleHideActions = (checked: boolean) => {\n    if (checked) {\n      setHiddenActions([]);\n    } else {\n      setHiddenActions(actionSet);\n    }\n  };\n\n  const [disabledActions, setDisabledActions] = React.useState<Action[]>([]);\n  const onToggleDisabledActions = (checked: boolean) => {\n    if (checked) {\n      setDisabledActions([]);\n    } else {\n      setDisabledActions(actionSet);\n    }\n  };\n\n  const changeSearch = () => {\n    embedRef.current.trigger(HostEvent.Search, {\n      searchQuery: \"[sales] by [item type]\",\n      dataSources: [\"cd252e5c-b552-49a8-821d-3eadaa049cca\"]\n    });\n  };\n\n  const onCustomAction = (e) => {\n    logEvent(e);\n    if (e.id === \"only-this-viz\") {\n      embedRef.current.trigger(HostEvent.SetVisibleVizs, [\n        \"6d39225c-8845-44b4-b105-910981cdbba8\"\n      ]);\n      console.log(JSON.parse(e.data));\n    }\n  };\n  const triggerDrill = () => {};\n  const reload = () => {\n    embedRef.current.trigger(HostEvent.Reload, {});\n  };\n\n  return (\n    <Layout>\n      <Header>\n        Search Embed\n        <i> (see events details in the console)</i>\n      </Header>\n\n      <Layout>\n        <Sider width={200}>\n          <div className=\"sider-content\">\n            <Button onClick={changeSearch}>Change query</Button>\n            <Button onClick={reload}>Reload</Button>\n            <Button onClick={triggerDrill}>Drill</Button>\n\n            <Switch\n              checkedChildren=\"Actions shown\"\n              unCheckedChildren=\"Actions hidden\"\n              defaultChecked\n              onChange={onToggleHideActions}\n            />\n            <Switch\n              checkedChildren=\"Actions enabled\"\n              unCheckedChildren=\"Actions disabled\"\n              defaultChecked\n              onChange={onToggleDisabledActions}\n            />\n          </div>\n        </Sider>\n\n        <Content>\n          <SearchEmbed\n            frameParams={{\n              height: \"100%\"\n            }}\n            className=\"liveboard-content\"\n            ref={embedRef}\n            searchOptions={{\n              searchTokenString: \"[quantity purchased] [region]\",\n              executeSearch: true\n            }}\n            dataSources={[\"cd252e5c-b552-49a8-821d-3eadaa049cca\"]}\n            collapseDataSources={true}\n            hiddenActions={hiddenActions}\n            disabledActions={disabledActions}\n            disabledActionReason=\"Pay $$$\"\n            onInit={logEvent(EmbedEvent.Init)}\n            onLoad={logEvent(\"Load\")}\n            onDrilldown={logEvent}\n            onCustomAction={onCustomAction}\n            onQueryChanged={logEvent}\n            onVizPointDoubleClick={logEvent}\n            onData={logEvent}\n          />\n        </Content>\n      </Layout>\n      <Footer>Footer</Footer>\n    </Layout>\n  );\n};\n","import {\n  Action,\n  EmbedEvent,\n  HostEvent,\n  Page\n} from \"@thoughtspot/visual-embed-sdk\";\nimport {\n  AppEmbed,\n  useEmbedRef\n} from \"@thoughtspot/visual-embed-sdk/lib/src/react\";\nimport { Layout, Button, Switch, Select } from \"antd\";\nimport React from \"react\";\nimport { useEventLogger, actionSet } from \"../../utils/utils\";\nimport {\n  actionsToDisable,\n  actionsToHide,\n  disabledReason,\n  filterName,\n  filterValues,\n  visibleVizIds,\n  customActionNameForShowThisViz\n} from \"../../constants\";\n\nconst { Header, Footer, Sider, Content } = Layout;\nconst { Option } = Select;\n\nexport const FullApp = () => {\n  const logEvent = useEventLogger();\n  const embedRef = useEmbedRef();\n  const [fullHeight, setFullHeight] = React.useState(false);\n  const [hiddenActions, setHiddenActions] = React.useState<Action[]>([]);\n  const [page, setPage] = React.useState(Page.Home);\n  const onToggleHideActions = (checked: boolean) => {\n    if (checked) {\n      setHiddenActions([]);\n    } else {\n      setHiddenActions(actionsToHide);\n    }\n  };\n\n  const [disabledActions, setDisabledActions] = React.useState<Action[]>([]);\n  const onToggleDisabledActions = (checked: boolean) => {\n    if (checked) {\n      setDisabledActions([]);\n    } else {\n      setDisabledActions(actionsToDisable);\n    }\n  };\n\n  const [lbV2, setLbV2] = React.useState<boolean>(true);\n  const onToggleLbV2 = (checked: boolean) => {\n    if (checked) {\n      setLbV2(true);\n    } else {\n      setLbV2(false);\n    }\n  };\n\n  const applyFilter = (colName: string, value: string[]) => {\n    console.log(colName, value);\n    embedRef.current.trigger(HostEvent.UpdateRuntimeFilters, [\n      {\n        columnName: colName.toLowerCase(),\n        operator: \"EQ\",\n        values: [value]\n      }\n    ]);\n  };\n\n  const onFilterSelect = (value: string[]) => {\n    applyFilter(filterName, value);\n  };\n\n  const onToggleFullHeight = (checked: boolean) => {\n    setFullHeight(checked);\n  };\n\n  const resetFilter = () => {\n    embedRef.current.trigger(HostEvent.UpdateRuntimeFilters, [\n      {\n        columnName: filterName,\n        operator: \"EQ\",\n        values: []\n      }\n    ]);\n  };\n\n  const selectVizs = () => {\n    embedRef.current.trigger(HostEvent.SetVisibleVizs, visibleVizIds);\n  };\n\n  // const customAction = () => {\n  //   embedRef.current.trigger(HostEvent.Present, {\n  //     vizId: \"d389fb17-d524-469f-b716-b0ef3eaef309\"\n  //   });\n  // };\n\n  const onCustomAction = (e) => {\n    logEvent(e);\n    if (e.id === customActionNameForShowThisViz) {\n      embedRef.current.trigger(HostEvent.Present, [\n        \"d389fb17-d524-469f-b716-b0ef3eaef309\"\n      ]);\n      console.log(JSON.parse(e.data));\n      console.log(\"selected current viz\");\n    }\n  };\n\n  const handlePathChange = (value: Page) => {\n    setPage(value);\n  };\n\n  const onDialogOpen = (e) => {\n    logEvent(e);\n  };\n  const onDialogClose = (e) => {\n    logEvent(e);\n  };\n\n  // const onCustomAction = (e) => {\n  //   if (e.id === \"only-this-viz\") {\n  //     embedRef.current.trigger(HostEvent.SetVisibleVizs, [\n  //       \"6d39225c-8845-44b4-b105-910981cdbba8\"\n  //     ]);\n  //     console.log(JSON.parse(e.data));\n  //   }\n  // };\n\n  // const onCustomAction = (e) => {\n  //   logEvent(e);\n  //   if (e.id === customActionNameForShowThisViz) {\n  //     embedRef.current.trigger(HostEvent.SetVisibleVizs, [\n  //       \"c083e80a-0606-4c94-a3a4-6c3124395cac\"\n  //     ]);\n  //     console.log(JSON.parse(e.data));\n  //     console.log(\"selected current viz\");\n  //   }\n  // };\n\n  const exploreViz = () => {\n    embedRef.current.trigger(HostEvent.Explore, {\n      vizId: \"aa634926-d773-4b53-af84-418981befc74\"\n    });\n    // points: clickedPointData,\n    // autoDrillDown: true,\n  };\n\n  const Schedule = () => {\n    embedRef.current.trigger(HostEvent.Schedule, {});\n    // points: clickedPointData,\n    // autoDrillDown: true,\n  };\n\n  const edit = () => {\n    embedRef.current.trigger(HostEvent.Edit, {\n      vizId: \"aa634926-d773-4b53-af84-418981befc74\"\n    });\n  };\n\n  const editTML = () => {\n    embedRef.current.trigger(HostEvent.EditTML, {});\n  };\n\n  const exportTML = () => {\n    embedRef.current.trigger(HostEvent.ExportTML, {});\n  };\n\n  const liveboardInfo = () => {\n    embedRef.current.trigger(HostEvent.LiveboardInfo, {});\n  };\n\n  const makeACopy = () => {\n    embedRef.current.trigger(HostEvent.MakeACopy, {});\n  };\n\n  const CreateMonitor = () => {\n    embedRef.current.trigger(HostEvent.CreateMonitor, {\n      vizId: \"132aee3b-152b-4852-9fb3-775c97949acc\"\n    });\n  };\n\n  const ManageMonitor = () => {\n    embedRef.current.trigger(HostEvent.ManageMonitor, {\n      vizId: \"132aee3b-152b-4852-9fb3-775c97949acc\"\n    });\n  };\n\n  const Pin = () => {\n    embedRef.current.trigger(HostEvent.Pin, {\n      vizId: \"aa634926-d773-4b53-af84-418981befc74\"\n    });\n  };\n\n  const Present = () => {\n    embedRef.current.trigger(HostEvent.Present, {\n      vizId: \"762cfe0f-6a5f-4381-b603-d3cd905de94a\"\n    });\n  };\n\n  const PresentLiveboard = () => {\n    embedRef.current.trigger(HostEvent.Present, {});\n  };\n\n  const ScheduleList = () => {\n    embedRef.current.trigger(HostEvent.SchedulesList, {});\n  };\n\n  const RuntimeFilter = () => {\n    embedRef.current.trigger(HostEvent.UpdateRuntimeFilters, [\n      {\n        columnName: \"Lo Shipmode\",\n        operator: \"IN\",\n        values: [\"ship\", \"air\"]\n      }\n    ]);\n  };\n\n  const updateTML = () => {\n    embedRef.current.trigger(HostEvent.UpdateTML, {});\n  };\n\n  const copyLink = () => {\n    embedRef.current.trigger(HostEvent.CopyLink, {});\n  };\n\n  const copyVizLink = () => {\n    embedRef.current.trigger(HostEvent.CopyLink, {\n      vizId: \"aa634926-d773-4b53-af84-418981befc74\"\n    });\n  };\n\n  const reload = () => {\n    embedRef.current.trigger(HostEvent.Reload, {});\n  };\n\n  const navigate = () => {\n    embedRef.current.trigger(HostEvent.Navigate, {\n      path: \"saved-answer/d3823bc-0fcb-4f57-abdd-fdbd8b264cd3\",\n      noReload: true\n    });\n  };\n\n  const Remove = () => {\n    embedRef.current.trigger(HostEvent.Remove, {});\n  };\n\n  return (\n    <Layout>\n      <Header>\n        Full App Embed\n        <i> (see events details in the console)</i>\n      </Header>\n\n      <Layout>\n        <Sider width={200}>\n          <div className=\"sider-content\">\n            <Select\n              defaultValue={Page.Home}\n              style={{ width: 120 }}\n              onChange={handlePathChange}\n            >\n              <Option value={Page.Home}>Home</Option>\n              <Option value={Page.Liveboards}>Liveboards</Option>\n              <Option value={Page.Data}>Data</Option>\n              <Option value={Page.Answers}>Answers</Option>\n              <Option value={Page.Search}>Search</Option>\n            </Select>\n\n            <Select\n              style={{ width: 135 }}\n              placeholder=\"Select filter\"\n              onChange={onFilterSelect}\n            >\n              {filterValues.map((item) => (\n                <Option value={item}>{item}</Option>\n              ))}\n            </Select>\n            <Button onClick={resetFilter}>Reset filter</Button>\n            <Button onClick={reload}>Reload</Button>\n            <Button onClick={selectVizs}>Selected Vizs</Button>\n            <Button onClick={exploreViz}>Explore</Button>\n            <Button onClick={Schedule}>Schedule</Button>\n            <Button onClick={edit}>Edit</Button>\n            <Button onClick={editTML}>Edit TML</Button>\n            <Button onClick={exportTML}>Export TML</Button>\n            <Button onClick={liveboardInfo}>Show Liveboard Info</Button>\n            <Button onClick={makeACopy}>Copy Liveboard</Button>\n            <Button onClick={CreateMonitor}>CreateMonitor Alert</Button>\n            <Button onClick={ManageMonitor}>ManageMonitor</Button>\n            <Button onClick={Pin}>Pin a viz</Button>\n            <Button onClick={Present}>Present</Button>\n            <Button onClick={PresentLiveboard}>PresentLiveboard</Button>\n            <Button onClick={ScheduleList}>Show Schedules List</Button>\n            <Button onClick={RuntimeFilter}>RuntimeFilter</Button>\n            <Button onClick={updateTML}>updateTML</Button>\n            <Button onClick={copyLink}>Copy Liveboard Link</Button>\n            <Button onClick={copyVizLink}>Copy Viz Link</Button>\n            <Button onClick={Remove}>Remove</Button>\n            <Button onClick={navigate}>Navigate</Button>\n\n            <Switch\n              checkedChildren=\"Actions shown\"\n              unCheckedChildren=\"Actions hidden\"\n              defaultChecked\n              onChange={onToggleHideActions}\n            />\n            <Switch\n              checkedChildren=\"Actions enabled\"\n              unCheckedChildren=\"Actions disabled\"\n              defaultChecked\n              onChange={onToggleDisabledActions}\n            />\n            <Switch\n              checkedChildren=\"LiveboardV2 enabled\"\n              unCheckedChildren=\"LiveboardV2 disabled\"\n              defaultChecked\n              onChange={onToggleLbV2}\n            />\n            <Switch\n              checkedChildren=\"Height is Adaptive\"\n              unCheckedChildren=\"Height is static\"\n              onChange={onToggleFullHeight}\n            />\n          </div>\n        </Sider>\n\n        <Content>\n          <AppEmbed\n            frameParams={{\n              height: 1500\n            }}\n            className=\"liveboard-content\"\n            ref={embedRef}\n            pageId={page}\n            hiddenActions={hiddenActions}\n            disabledActions={disabledActions}\n            disabledActionReason={disabledReason}\n            path=\"/navigateToPage\"\n            onInit={logEvent(EmbedEvent.Init)}\n            onLoad={logEvent(\"Load\")}\n            onDrilldown={logEvent}\n            onCustomAction={onCustomAction}\n            onQueryChanged={logEvent}\n            onAlert={logEvent}\n            liveboardV2={lbV2}\n            onDialogOpen={onDialogOpen}\n            onDialogClose={onDialogClose}\n            onRouteChange={logEvent(EmbedEvent.RouteChange)}\n            showPrimaryNavbar={false}\n          />\n        </Content>\n      </Layout>\n      <Footer>Footer</Footer>\n    </Layout>\n  );\n};\n","import {\n  Client,\n  DEFAULT_CONFIGURATION,\n  MetadataController,\n  DataController,\n} from \"@thoughtspot/rest-api-sdk\";\nimport { TOKEN_ENDPOINT_API, TS_HOST } from \"./constants\";\nimport React, { useState } from \"react\";\n\nDEFAULT_CONFIGURATION.baseUrl = `https://${TS_HOST}`;\nDEFAULT_CONFIGURATION.acceptLanguage = \"*\";\n\nconst apiContext = React.createContext<{\n  metadataController: MetadataController | null;\n  dataController: DataController | null;\n}>({\n  metadataController: null,\n  dataController: null\n});\n\nexport const useAPIClient = () => React.useContext(apiContext);\n\nexport const APIProvider = ({ children }) => {\n  const [loading, uisetLoading] = React.useState(true);\n  const [error, setError] = React.useState(null);\n  const [controllers, setControllers] = React.useState<any>({});\n\n  const init = (token: string) => {\n    DEFAULT_CONFIGURATION.accessToken = token;\n    let client = new Client(DEFAULT_CONFIGURATION);\n    const metadataController = new MetadataController(client);\n    const dataController = new DataController(client);\n    setControllers({\n      metadataController,\n      dataController\n    });\n  };\n\n  React.useEffect(() => {\n    // fetch(TOKEN_ENDPOINT_API)\n    //   .then((res) => res.text())\n    //   .then((token) => {\n    //     init(token);\n    //   });\n  }, []);\n\n  return (\n    <apiContext.Provider value={controllers}>{children}</apiContext.Provider>\n  );\n};\n","import { Layout, Button, Select } from \"antd\";\nimport ReactDataGrid from \"@inovua/reactdatagrid-enterprise\";\nimport \"@inovua/reactdatagrid-enterprise/index.css\";\nimport React from \"react\";\nimport {\n  useEventLogger,\n  actionSet,\n  convertToRowOriented\n} from \"../../utils/utils\";\nimport { useAPIClient } from \"../../api-client\";\n\nconst { Header, Footer, Sider, Content } = Layout;\nconst { Option } = Select;\n\nexport const Api = () => {\n  const logEvent = useEventLogger();\n  const { metadataController, dataController }: any = useAPIClient();\n  const [options, setOptions] = React.useState([\n    {\n      name: \"loading ...\",\n      id: \"\"\n    }\n  ]);\n  const [rows, setRows] = React.useState([]);\n  const [columns, setColumns] = React.useState([]);\n  const [loading, setLoading] = React.useState(false);\n  const populateAnswers = async () => {\n    setLoading(true);\n    const answers: any = await metadataController?.searchObjectHeader({\n      type: 'ANSWER'\n    });\n    setLoading(false);\n    if (answers) {\n      setOptions(\n        answers?.result.headers.map((a) => ({ name: a.name, id: a.id }))\n      );\n    }\n  };\n  React.useEffect(() => {\n    populateAnswers();\n  }, [metadataController]);\n\n  const loadAnswer = async (id: string) => {\n    setLoading(true);\n    const { result } = await dataController?.answerData({\n      id: id\n    });\n    const { rows, columns } = convertToRowOriented(result);\n    setRows(rows);\n    setColumns(columns);\n    setLoading(false);\n  };\n\n  return (\n    <Layout>\n      <Header>\n        API Embed\n        <i> (see events details in the console)</i>\n      </Header>\n\n      <Layout>\n        <Sider width={200}>\n          <div className=\"sider-content\">\n            <div>Select answer</div>\n            <Select style={{ width: 120 }} onChange={loadAnswer}>\n              {options.map((option) => (\n                <Option value={option.id}>{option.name}</Option>\n              ))}\n            </Select>\n          </div>\n        </Sider>\n\n        <Content>\n          <ReactDataGrid\n            dataSource={rows}\n            columns={columns}\n            enableColumnAutosize\n            loading={loading}\n            rowHeight={40}\n            style={{ minHeight: 550 }}\n          ></ReactDataGrid>\n        </Content>\n      </Layout>\n      <Footer>Footer</Footer>\n    </Layout>\n  );\n};\n","import { Home } from \"./components/home/home\";\nimport { Liveboard } from \"./components/liveboard/liveboard\";\nimport { Viz } from \"./components/viz/viz\";\nimport { TableViz } from \"./components/viz/table-viz\";\nimport { Search } from \"./components/search/search\";\nimport { FullApp } from \"./components/full/full\";\nimport { Api } from \"./components/api/api\";\n\nexport const routes = [\n  {\n    path: \"/\",\n    element: <Home />\n  },\n  {\n    path: \"/search\",\n    element: <Search />\n  },\n  {\n    path: \"/liveboard\",\n    element: <Liveboard />\n  },\n  {\n    path: \"/viz\",\n    element: <Viz />\n  },\n  {\n    path: \"/viz-table\",\n    element: <TableViz />\n  },\n  {\n    path: \"/full\",\n    element: <FullApp />\n  },\n  {\n    path: \"/api\",\n    element: <Api />\n  }\n];\n","import { Button, Menu } from \"antd\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { logout } from \"@thoughtspot/visual-embed-sdk\";\n\nexport const Nav = () => {\n  const location = useLocation();\n  return (\n    <Menu\n      style={{ position: \"fixed\", height: \"48px\", width: \"100vw\" }}\n      selectedKeys={[location.pathname]}\n      mode=\"horizontal\"\n    >\n      <Menu.Item key=\"/\">\n        <Link to=\"/\">Home</Link>\n      </Menu.Item>\n      <Menu.Item key=\"/liveboard\">\n        <Link to=\"/liveboard\">Liveboard</Link>\n      </Menu.Item>\n      <Menu.Item key=\"/viz\">\n        <Link to=\"/viz\">Viz</Link>\n      </Menu.Item>\n      <Menu.Item key=\"/viz-table\">\n        <Link to=\"/viz-table\">Table Viz</Link>\n      </Menu.Item>\n      <Menu.Item key=\"/search\">\n        <Link to=\"/search\">Search</Link>\n      </Menu.Item>\n      <Menu.Item key=\"/full\">\n        <Link to=\"/full\">Full App</Link>\n      </Menu.Item>\n      <Menu.Item key=\"/api\">\n        <Link to=\"/api\">REST Api</Link>\n      </Menu.Item>\n      <Menu.Item key=\"logout\" style={{ marginLeft: \"auto\" }}>\n        <Button type=\"link\" onClick={() => logout(true)}>\n          Logout\n        </Button>\n      </Menu.Item>\n    </Menu>\n  );\n};\n","import \"./styles.css\";\nimport \"antd/dist/antd.dark.css\";\nimport { init, AuthType } from \"@thoughtspot/visual-embed-sdk\";\nimport { HashRouter, useRoutes } from \"react-router-dom\";\nimport { notification } from \"antd\";\nimport { routes } from \"./routes\";\nimport { Nav } from \"./components/nav/nav\";\nimport { TS_HOST } from \"./constants\";\nimport { APIProvider } from \"./api-client\";\n\n// Initialize ThoughtSpot Visual embed sdk\nconst authStatus = init({\n  thoughtSpotHost: TS_HOST,\n  authType: AuthType.Passthrough\n  // customCssUrl: \"cdn.jsdelivr.net/gh/thoughtspot/custom-css-demo/dark3.css\"\n});\n\nauthStatus.on(\"SUCCESS\", () => {\n  notification.info({\n    message: \"Auth successful\",\n    duration: 2,\n    placement: \"bottomRight\"\n  });\n});\nauthStatus.on(\"FAILURE\", (reason) => {\n  notification.error({\n    message: \"Auth Failed due to \" + reason,\n    duration: 2,\n    placement: \"bottomRight\"\n  });\n});\nauthStatus.on(\"LOGOUT\", () => {\n  notification.info({\n    message: \"Successfully logged out\",\n    duration: 2,\n    placement: \"bottomRight\"\n  });\n});\n\nfunction AppView() {\n  const element = useRoutes(routes);\n  return (\n    <div className=\"App\">\n      <Nav />\n      {element}\n    </div>\n  );\n}\n\nexport default function App() {\n  return (\n    <HashRouter>\n      <APIProvider>\n        <AppView />\n      </APIProvider>\n    </HashRouter>\n  );\n}\n","import { render } from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nrender(<App />, rootElement);\n"],"sourceRoot":""}